Работа будет состоять из нескольких этапов. Данный файл содержит план для каждого из этапов. 

Этап 1. Разведочный анализ статьи, повторение результатов
Задачи: 
       - Проверить наличие датасета WIKI, на котором обучались в статье
       - Воспроизвести результаты модели

Этап 2. Адаптация метода для генерации кода
Задачи: 
       - Сбор данных с GitHub для выборки из кода, коммитов и правок
       - Попробовать собрать разные варианты в качестве документов (либо похожие проекты, либо документации к добавленным функциям/модулям и вопросы со StackOverflow)
       - Доработка других нюансов, при необходимости
       
Этап 3. Обучение модели и исследование возможностей
Задачи: 
       - Обучение модели (с подбором оптимальных гиперпараметров)
       - Исследование возможностей лучшей модели (прогон на известных задачках генерации текста, тестирование перевода с одного языка на другой и тд)

Этап 4. Хотелось бы успеть
       - Дополнительные эксперименты с моделью (экспериментов всегда мало)
       - Реализация сервиса (редактора кода) с применением возможностей модели



Краткое описание статьи: основная идея состоит в том, чтобы смоделировать редактирование текстового контента как повторяющийся процесс, в котором мы неоднократно планируется и реализуется какое-либо изменение. Так, на кождой итерации текст x_t редактируется и превращается в x_(t+1). Редактирование происходит при условии (на основе) набора документов: D_t = {d_1t, d_2t, ..., d_kt}, которые содержат необходимую для обновления информацию. Пусть у нас имеются x_t и D_t. Сперва формулируется "план" p_t - краткое описание можификаций текста (например «добавить больше информации», «исправить грамматические ошибки»). Затем этот план реализуется и получается текст x_(t+1). Напоследок, правка сопровождается "объяснением" e_t (часто объяснение может быть похоже или в точности совподать с планом). 

Таким образом имеется 4 метода:
       - PEER-Edit  
              (x_t, d_1t, ..., d_kt)      --->   (p_t, x_(t+1))
       
       - PEER-Undo  
              (x_(t+1), d_1t, ..., d_kt)      --->   (p_t, x_t)
              
       - PEER-Explain
              (x_t, x_(t+1), d_1t, ..., d_kt)      --->   e_t
              
       - PEER-Document
              (x_t, x_(t+1), p_t)      --->   d_it
